name: Player Backend Pipeline

on:
  push:
    branches:
      - main
    paths:
      - player-backend/**
      - docker/backend/**
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml

jobs:
  compile:
    name: 'Compile: Player Backend'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Compile project
        run: |
          cd player-backend
          mvn clean compile

  unit-tests:
    name: 'Run Unit Tests: Player Backend'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Run Unit Tests
        run: |
          cd player-backend
          mvn clean test

  build:
    name: 'Build: Player Backend'
    runs-on: ubuntu-latest
    needs: [ compile, unit-tests ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Build the Application
        run: |
          cd player-backend
          mvn clean package

  build-image:
    name: 'Build Docker Image: Player Backend'
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Extract Project Version
        id: extract_version
        run: |
          cd player-backend
          echo "VERSION=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: player-backend
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/arm64/v8
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/player-backend:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/player-backend:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
